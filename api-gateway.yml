server:
  port: 8765
  
# The OAuth2 server definition that would be used to send the authorization requests to
authserver:
  hostname: localhost
  port: 8899
  contextPath: userauth
      
      
# Define the Eureka server that handles service registration
eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/
      
# Define settings for Single-Sign-On with OAuth2; this means that we need to relay the OAuth token 
# to the subsequent resources that are proxied by the Zuul api gateway.

# The home definition tells us to allow anonymous access (secure: false) to the static resources that
# are accessed through the Zuul proxy.

# Remaining properties are used by the OAuth2 SSO to determine where the authorization server is and
# what client crendentials to use to access that server.
security:
  basic:
    enabled: false
  oauth2:
    client:
      clientId: barClientIdPassword
      clientSecret: secret
      accessTokenUri: http://localhost:8899/userauth/oauth/token
      userAuthorizationUri: http://localhost:8899/userauth/oauth/authorize
    resource:
      userInfoUri: http://localhost:8899/userauth/user
spring:
  thymeleaf:
    cache: false

# The userInfoUri is used to authenticate the user so that SSO token can be relayed forward. It needs to either be
# a physical endpoint (defined using userInfoUri) OR can be bypassed if you use a JSON web token (JWT) that stores
# information about grants and authentication in the token itself.

# Note that the "/user" endpoint needs to provide the principle of the logged in user (/me endpoint)
     
   
# Define the port where the API gateway server would be running. This could always be port 8080
# since each docker container has it's own IP
server:
  port: 8080

      
      
